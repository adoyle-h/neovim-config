local M = { 'general.commands', desc = 'General functions and commands' }

local CM = require('adoyle-neovim-config.config')
local util = require('adoyle-neovim-config.util')

M.commands = {
	{ 'Q', ':q!', { desc = 'quit current buffer without saving' } },
	{ 'Qa', ':qa!', { desc = 'quit all buffers without saving' } },
	{ 'CD', ':lcd %:p:h', { desc = 'Change PWD in current buffer' } },

	{
		'Cheatsheet',
		function()
			local lang = table.unpack(vim.split(string.lower(vim.v.lang), '.', { plain = true }))
			local url = 'https://vim.rtorr.com/lang/' .. lang
			vim.fn['openbrowser#open'](url)
		end,
		{ desc = 'Open vim cheatsheet in browser' },
	},

	{
		'GetWinConfig',
		function()
			vim.notify(vim.inspect(vim.api.nvim_win_get_config(0)))
		end,
		{ desc = 'Print current window config' },
	},

	{
		'FixLineBreak',
		function()
			vim.cmd [[
				e ++ff=dos
				set ff=unix
				w
			]]
		end,
	},

	{
		'ProfileStart',
		function()
			vim.cmd [[
				profile start profile.log
				profile func *
				profile file *
			]]
		end,
		{ desc = 'ProfileStart/ProfileEnd' },
	},

	{
		'ProfileEnd',
		function()
			vim.cmd ':profile pause'
		end,
		{ desc = 'ProfileStart/ProfileEnd' },
	},

	{
		'OpenGithub',
		function()
			local text = vim.fn.expand('<cfile>')
			vim.fn.OpenBrowser('https://github.com/' .. text)
		end,
		{ desc = 'Open github url in browser' },
	},

	{
		'ShowConfig',
		function()
			local w = util.newWindow({ title = '[ADoyle-Neovim-Configs]', ft = 'lua' })
			local write, writeVal = w.write, w.writeVal
			write('-- The content generated by :ShowConfig')
			write('-- config --')

			local config = vim.tbl_extend('keep', CM.config, {})
			writeVal(config)

			w.resetCursor()
		end,
		{ desc = 'Show the merged config of adoyle-neovim-config' },
	},

	{
		'ShowPlugins',
		function()
			local w = util.newWindow({ title = '[ADoyle-Neovim-Plugins]', ft = 'text' })
			local write, writeVal = w.write, w.writeVal
			local P = require('adoyle-neovim-config.vim-plug')
			write('-- The content generated by :ShowPlugins')
			write('-- plugins --')
			for _, p in pairs(P.plugs) do writeVal(p) end
			w.resetCursor()
		end,
		{ desc = 'Show plugins of adoyle-neovim-config' },
	},

	{
		'ListSourcedScript',
		function()
			local w = util.newWindow({ title = '[Nvim Sourced Scripts]' })
			local write = w.write
			write('The content generated by :scriptnames')
			write('')

			local output = vim.api.nvim_exec('scriptnames', true)
			for _, l in pairs(vim.split(output, '\n')) do write(l) end

			w.resetCursor()
		end,
	},

	{
		'TabOrSpace',
		function()
			vim.ui.select({ 'Tabs', 'Spaces' }, {
				prompt = 'Select Tabs or Spaces:',
				format_item = function(item)
					return 'I\'d like to choose ' .. item
				end,
			}, function(choice)
				if choice == 'Spaces' then
					vim.o.expandtab = true
				else
					vim.o.expandtab = false
				end
			end)
		end,
	},
}

return M
